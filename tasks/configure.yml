---
- name: Ensure Directories exist
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: wheel
    mode: 0775
  with_items:
    - /etc/cas
- name: Place CAS properties
  template:
    src: cas.properties.j2
    dest: /etc/cas/cas.properties
- name: Place fileauth password file
  template:
    src: people.txt.j2
    dest: /etc/cas/people.txt
  when: (cas_fileauth_users is defined)
- name: Place SAML2 Client metadata
  template:
    src: samlSP.xml.j2
    dest: /etc/cas/samlSP.xml
  when: ((cas_pac4j_saml is defined) and (cas_pac4j_saml is not none))
- name: Fetch SAML2 Client IdP Metadata
  get_url:
    url: "{{ cas_pac4j_saml.idp_md_url }}"
    dest: /etc/cas/samlIdP.xml
  when: ((cas_pac4j_saml is defined) and (cas_pac4j_saml is not none))
- name: Place CAS log config
  template:
    src: log4j2.xml.j2
    dest: /etc/cas/log4j2.xml
- name: Place server.xml for Tomcat
  template:
    src: server.xml.j2
    dest: /usr/share/tomcat/conf/server.xml
- name: Configure JAVA_OPTS for Tomcat
  lineinfile:
    dest: /usr/share/tomcat/conf/tomcat.conf
    line: >
      JAVA_OPTS="-Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true -Xmx512m -XX:MaxPermSize=256m -XX:+UseConcMarkSweepGC"
- name: Generate a cert keystore for SAML2 Client
  sudo: yes
  command: >
     keytool -genkeypair -alias pac4j-demo -keypass "{{ cas_pac4j_saml.keypass }}" -keystore /etc/cas/samlKeystore.jks -storepass "{{ cas_pac4j_saml.storepass }}" -dname "{{ cas_pac4j_saml.dname }}" -keyalg RSA -keysize 2048 -validity 3650
  args:
    creates: /etc/cas/samlKeystore.jks
  when: ((cas_pac4j_saml is defined) and (cas_pac4j_saml is not none))
- name: Delete Bad LDAP Certificate
  shell: >
    keytool -delete -alias "{{ item.hostname }}" -keystore "{{ cas_ca_keystore }}" -storepass "{{ cas_ca_storepass }}" -noprompt
  with_items: "{{ cas_bad_ldaps }}"
  ignore_errors: yes
- name: Import Bad LDAP Certificate
  shell: >
    echo -n | openssl s_client -connect "{{ item.hostname }}":"{{ item.port }}"  | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | keytool -import -trustcacerts -alias "{{ item.hostname }}" -keystore "{{ cas_ca_keystore }}" -storepass "{{ cas_ca_storepass }}" -noprompt
  with_items: "{{ cas_bad_ldaps }}"
